# 简化版 Dockerfile
FROM golang:1.23-alpine AS builder

# 设置工作目录
WORKDIR /app

# 安装构建依赖
RUN apk add --no-cache git

# 复制依赖文件
COPY go.mod go.sum ./
RUN go mod download

# 复制源代码
COPY . .

# 构建应用
RUN CGO_ENABLED=0 GOOS=linux go build -a -installsuffix cgo -o gpt-load main.go

# 最终运行阶段
FROM alpine:latest

# 安装必要的包
RUN apk --no-cache add ca-certificates tzdata wget curl

# 创建应用用户
RUN addgroup -g 1000 -S appuser && \
    adduser -u 1000 -S appuser -G appuser

# 设置工作目录
WORKDIR /app

# 创建必要的目录
RUN mkdir -p /app/data /app/logs && \
    chown -R appuser:appuser /app

# 从构建阶段复制二进制文件
COPY --from=builder /app/gpt-load ./
COPY --chown=appuser:appuser web/dist ./web/dist

# 切换到非root用户
USER appuser

# 暴露端口
EXPOSE 3001 3002

# 健康检查
HEALTHCHECK --interval=30s --timeout=10s --start-period=40s --retries=3 \
    CMD wget -q --spider -T 10 -O /dev/null http://localhost:3001/health || exit 1

# 启动应用
CMD ["./gpt-load"]